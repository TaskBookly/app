name: Test Build

run-name: "Test Build: ${{ github.event.inputs.platform }} (${{ github.event.inputs.build_type }})"

on:
    workflow_dispatch:
        inputs:
            platform:
                description: "Platform to build"
                required: true
                default: "mac"
                type: choice
                options:
                    - mac
                    - linux
                    - win
                    - all
            build_type:
                description: "Build type"
                required: true
                default: "unpacked"
                type: choice
                options:
                    - unpacked
                    - installer

jobs:
    test-build:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                include:
                    - os: macos-latest
                      platform: mac
                    - os: ubuntu-latest
                      platform: linux
                    - os: windows-latest
                      platform: win

        steps:
            - name: Check if platform should build
              id: should-build
              run: |
                  if [ "${{ github.event.inputs.platform }}" = "${{ matrix.platform }}" ] || [ "${{ github.event.inputs.platform }}" = "all" ]; then
                    echo "build=true" >> $GITHUB_OUTPUT
                  else
                    echo "build=false" >> $GITHUB_OUTPUT
                  fi
            - name: Checkout code
              if: steps.should-build.outputs.build == 'true'
              uses: actions/checkout@v4

            - name: Setup Node.js
              if: steps.should-build.outputs.build == 'true'
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"

            - name: Install dependencies
              if: steps.should-build.outputs.build == 'true'
              run: npm ci

            - name: Build app
              if: steps.should-build.outputs.build == 'true'
              run: |
                  if [ "${{ github.event.inputs.build_type }}" = "unpacked" ]; then
                    npm run test:${{ matrix.platform }}
                  else
                    npm run dist:${{ matrix.platform }}
                  fi

            - name: Upload unpacked build (macOS .app)
              if: steps.should-build.outputs.build == 'true' && matrix.platform == 'mac' && github.event.inputs.build_type == 'unpacked'
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ github.event.inputs.build_type }}-build-macos-app
                  path: dist/mac/*.app
                  retention-days: 30

            - name: Upload installer build (macOS .dmg)
              if: steps.should-build.outputs.build == 'true' && matrix.platform == 'mac' && github.event.inputs.build_type == 'installer'
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ github.event.inputs.build_type }}-build-macos-dmg
                  path: dist/*.dmg
                  retention-days: 30

            - name: Upload unpacked build (Linux)
              if: steps.should-build.outputs.build == 'true' && matrix.platform == 'linux' && github.event.inputs.build_type == 'unpacked'
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ github.event.inputs.build_type }}-build-linux
                  path: dist/linux-unpacked/
                  retention-days: 30

            - name: Upload installer build (Linux)
              if: steps.should-build.outputs.build == 'true' && matrix.platform == 'linux' && github.event.inputs.build_type == 'installer'
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ github.event.inputs.build_type }}-build-linux
                  path: dist/*.AppImage
                  retention-days: 30

            - name: Upload unpacked build (Windows)
              if: steps.should-build.outputs.build == 'true' && matrix.platform == 'win' && github.event.inputs.build_type == 'unpacked'
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ github.event.inputs.build_type }}-build-windows
                  path: dist/win-unpacked/
                  retention-days: 30

            - name: Upload installer build (Windows)
              if: steps.should-build.outputs.build == 'true' && matrix.platform == 'win' && github.event.inputs.build_type == 'installer'
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ github.event.inputs.build_type }}-build-windows
                  path: |
                      dist/*.exe
                      dist/*.msi
                  retention-days: 30
