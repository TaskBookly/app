name: Test Build

run-name: "Test Build: ${{ github.event.inputs.platform }} (${{ github.event.inputs.build_type }})"

on:
    workflow_dispatch:
        inputs:
            platform:
                description: "Platform to build"
                required: true
                default: "mac"
                type: choice
                options:
                    - mac
                    - linux
                    - win
                    - all
            build_type:
                description: "Build type"
                required: true
                default: "unpacked"
                type: choice
                options:
                    - unpacked
                    - installer

jobs:
    setup:
        runs-on: ubuntu-latest
        outputs:
            build-mac: ${{ steps.check-platforms.outputs.build-mac }}
            build-linux: ${{ steps.check-platforms.outputs.build-linux }}
            build-win: ${{ steps.check-platforms.outputs.build-win }}
        steps:
            - name: Check which platforms to build
              id: check-platforms
              run: |
                  if [ "${{ github.event.inputs.platform }}" = "all" ]; then
                    echo "build-mac=true" >> $GITHUB_OUTPUT
                    echo "build-linux=true" >> $GITHUB_OUTPUT
                    echo "build-win=true" >> $GITHUB_OUTPUT
                  elif [ "${{ github.event.inputs.platform }}" = "mac" ]; then
                    echo "build-mac=true" >> $GITHUB_OUTPUT
                    echo "build-linux=false" >> $GITHUB_OUTPUT
                    echo "build-win=false" >> $GITHUB_OUTPUT
                  elif [ "${{ github.event.inputs.platform }}" = "linux" ]; then
                    echo "build-mac=false" >> $GITHUB_OUTPUT
                    echo "build-linux=true" >> $GITHUB_OUTPUT
                    echo "build-win=false" >> $GITHUB_OUTPUT
                  elif [ "${{ github.event.inputs.platform }}" = "win" ]; then
                    echo "build-mac=false" >> $GITHUB_OUTPUT
                    echo "build-linux=false" >> $GITHUB_OUTPUT
                    echo "build-win=true" >> $GITHUB_OUTPUT
                  fi
              shell: bash

    build-mac:
        if: needs.setup.outputs.build-mac == 'true'
        needs: setup
        runs-on: macos-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build macOS app
              run: |
                  if [ "${{ github.event.inputs.build_type }}" = "unpacked" ]; then
                    npm run test:mac
                  else
                    npm run dist:mac
                  fi
              shell: bash

            - name: Debug - List dist directory contents
              if: github.event.inputs.build_type == 'unpacked'
              run: |
                  echo "=== Contents of dist directory ==="
                  find dist -name "*.app" -type d 2>/dev/null || echo "No .app bundles found"
                  echo "=== Full dist structure ==="
                  ls -la dist/ || echo "dist directory not found"
              shell: bash

            - name: Upload macOS unpacked build
              if: github.event.inputs.build_type == 'unpacked'
              uses: actions/upload-artifact@v4
              with:
                  name: unpacked-build-macos
                  path: dist/
                  retention-days: 30

            - name: Upload macOS installer
              if: github.event.inputs.build_type == 'installer'
              uses: actions/upload-artifact@v4
              with:
                  name: installer-build-macos
                  path: dist/*.dmg
                  retention-days: 30

    build-linux:
        if: needs.setup.outputs.build-linux == 'true'
        needs: setup
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build Linux app
              run: |
                  if [ "${{ github.event.inputs.build_type }}" = "unpacked" ]; then
                    npm run test:linux
                  else
                    npm run dist:linux
                  fi
              shell: bash

            - name: Upload Linux unpacked build
              if: github.event.inputs.build_type == 'unpacked'
              uses: actions/upload-artifact@v4
              with:
                  name: unpacked-build-linux
                  path: dist/linux-unpacked/
                  retention-days: 30

            - name: Upload Linux installer
              if: github.event.inputs.build_type == 'installer'
              uses: actions/upload-artifact@v4
              with:
                  name: installer-build-linux
                  path: dist/*.AppImage
                  retention-days: 30

    build-win:
        if: needs.setup.outputs.build-win == 'true'
        needs: setup
        runs-on: windows-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build Windows app
              run: |
                  if [ "${{ github.event.inputs.build_type }}" = "unpacked" ]; then
                    npm run test:win
                  else
                    npm run dist:win
                  fi
              shell: bash

            - name: Upload Windows unpacked build
              if: github.event.inputs.build_type == 'unpacked'
              uses: actions/upload-artifact@v4
              with:
                  name: unpacked-build-windows
                  path: dist/win-unpacked/
                  retention-days: 30

            - name: Upload Windows installer
              if: github.event.inputs.build_type == 'installer'
              uses: actions/upload-artifact@v4
              with:
                  name: installer-build-windows
                  path: |
                      dist/*.exe
                      dist/*.msi
                  retention-days: 30
