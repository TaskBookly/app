name: Release

run-name: "Release v${{ needs.get-version.outputs.version }}${{ github.event.inputs.prerelease == 'true' && ' (pre-release)' || '' }}"

permissions:
    contents: write
    actions: read

on:
    workflow_dispatch:
        inputs:
            prerelease:
                description: "Mark as pre-release"
                required: false
                default: false
                type: boolean

jobs:
    get-version:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get-version.outputs.version }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Get version from package.json
              id: get-version
              run: |
                  VERSION=$(node -p "require('./package.json').version")
                  echo "version=$VERSION" >> $GITHUB_OUTPUT
                  echo "Version: $VERSION"

    release:
        needs: get-version
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                include:
                    - os: macos-latest
                      platform: mac
                    - os: ubuntu-latest
                      platform: linux
                    - os: windows-latest
                      platform: win

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Confirm version
              run: |
                  VERSION="${{ needs.get-version.outputs.version }}"
                  echo "Building release for version: $VERSION"

            - name: Build and package app
              run: npm run dist:${{ matrix.platform }}
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload release artifacts (macOS)
              if: matrix.platform == 'mac'
              uses: actions/upload-artifact@v4
              with:
                  name: taskbookly-macos
                  path: dist/*.dmg

            - name: Upload release artifacts (Linux)
              if: matrix.platform == 'linux'
              uses: actions/upload-artifact@v4
              with:
                  name: taskbookly-linux
                  path: dist/*.AppImage

            - name: Upload release artifacts (Windows)
              if: matrix.platform == 'win'
              uses: actions/upload-artifact@v4
              with:
                  name: taskbookly-windows
                  path: |
                      dist/*.exe
                      dist/*.msi

    publish:
        needs: release
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: release-assets

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: v${{ needs.get-version.outputs.version }}
                  name: TaskBookly v${{ needs.get-version.outputs.version }}
                  files: |
                      release-assets/**/*
                  draft: false
                  prerelease: ${{ github.event.inputs.prerelease }}
                  generate_release_notes: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
