name: Draft Release

run-name: "New Draft Release"

permissions:
    contents: write
    actions: read

on:
    workflow_dispatch:

jobs:
    release:
        runs-on: ${{ matrix.os }}
        timeout-minutes: 45

        strategy:
            fail-fast: false
            matrix:
                include:
                    - os: macos-latest
                      platform: mac
                    - os: ubuntu-latest
                      platform: linux
                    - os: windows-latest
                      platform: win

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build and package app
              run: npm run dist:${{ matrix.platform }}
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload release artifacts (macOS)
              if: matrix.platform == 'mac'
              uses: actions/upload-artifact@v4
              with:
                  name: taskbookly-macos
                  path: dist/*.dmg
                  if-no-files-found: error

            - name: Upload release artifacts (Linux)
              if: matrix.platform == 'linux'
              uses: actions/upload-artifact@v4
              with:
                  name: taskbookly-linux
                  path: dist/*.AppImage
                  if-no-files-found: error

            - name: Upload release artifacts (Windows)
              if: matrix.platform == 'win'
              uses: actions/upload-artifact@v4
              with:
                  name: taskbookly-windows
                  path: dist/*.exe
                  if-no-files-found: error

    publish:
        needs: release
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Get version from package.json
              id: package-version
              shell: bash
              run: |
                  VERSION=$(node -p "require('./package.json').version")
                  echo "version=$VERSION" >> $GITHUB_OUTPUT
                  echo "Using version from package.json: $VERSION"

            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: release-assets

            - name: Verify downloaded artifacts
              run: |
                  echo "Checking downloaded artifacts..."
                  ls -la release-assets/
                  if [ ! -d "release-assets/taskbookly-macos" ] || [ ! -d "release-assets/taskbookly-linux" ] || [ ! -d "release-assets/taskbookly-windows" ]; then
                    echo "Error: Missing required artifacts"
                    exit 1
                  fi
                  echo "All artifacts verified"

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: v${{ steps.package-version.outputs.version }}
                  name: TaskBookly ${{ steps.package-version.outputs.version }}
                  files: |
                      release-assets/**/*
                  draft: true
                  generate_release_notes: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
