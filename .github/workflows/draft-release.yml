name: Build Draft Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win
          - os: macos-latest
            platform: mac
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Update version in package.json
      run: npm version ${{ github.event.inputs.version }} --no-git-tag-version
    
    - name: Build Linux
      if: matrix.platform == 'linux'
      run: npm run dist:linux
    
    - name: Build Windows
      if: matrix.platform == 'win'
      run: npm run dist:win
    
    - name: Build macOS
      if: matrix.platform == 'mac'
      run: npm run dist:mac
      env:
        CSC_LINK: ${{ secrets.CSC_LINK }}
        CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
    
    - name: Upload artifacts (Linux)
      if: matrix.platform == 'linux'
      uses: actions/upload-artifact@v4
      with:
        name: linux-build-${{ github.event.inputs.version }}
        path: |
          dist/*.AppImage
          dist/*.tar.gz
    
    - name: Upload artifacts (Windows)
      if: matrix.platform == 'win'
      uses: actions/upload-artifact@v4
      with:
        name: windows-build-${{ github.event.inputs.version }}
        path: |
          dist/*.exe
          dist/*.msi
    
    - name: Upload artifacts (macOS)
      if: matrix.platform == 'mac'
      uses: actions/upload-artifact@v4
      with:
        name: macos-build-${{ github.event.inputs.version }}
        path: |
          dist/*.dmg
          dist/*.zip

  create-draft-release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Create Draft Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: TaskBookly ${{ github.event.inputs.version }}
        files: |
          artifacts/**/*
        draft: true
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
