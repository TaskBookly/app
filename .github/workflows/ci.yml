name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Build React app
      run: npm run build
    
    - name: Transpile Electron
      run: npm run transpile:electron

  build-test:
    needs: test
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build and prepare for distribution (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        npm run transpile:electron
        npm run build
    
    - name: Build and prepare for distribution (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        npm run transpile:electron
        npm run build
    
    - name: Build and prepare for distribution (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        npm run transpile:electron
        npm run build
